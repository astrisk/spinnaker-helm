server:
  port: 8087


redis:
  connection: redis://redis-service:6379

aws:
  enabled: false
  bakeryDefaults:
    awsAssociatePublicIpAddress: true
    # To make use of share_with and copy_to, replace this template with aws-multi-ebs.json.
    # When using aws-multi-ebs.json or aws-multi-chroot.json make sure to set the SPINNAKER_AWS_DEFAULT_ACCOUNT env
    # variable to the account ID of the AWS account the Spinnaker instance is launched in.
    templateFile: aws-ebs.json
    defaultVirtualizationType: hvm
    baseImages:
    # AMIs sourced from: https://cloud-images.ubuntu.com/locator/ec2/
    # Images should be considered placeholders.
    - baseImage:
        id: ubuntu
        shortDescription: v12.04
        detailedDescription: Ubuntu Precise Pangolin v12.04
        packageType: deb
      virtualizationSettings:
      - region: us-east-1
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-d4aed0bc
        sshUserName: ubuntu
      - region: us-west-1
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-4f285a2f
        sshUserName: ubuntu
      - region: us-west-2
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-59396769
        sshUserName: ubuntu
      - region: us-east-1
        virtualizationType: pv
        instanceType: m3.medium
        sourceAmi: ami-8007b2e8
        sshUserName: ubuntu
      - region: us-west-1
        virtualizationType: pv
        instanceType: m3.medium
        sourceAmi: ami-3a12605a
        sshUserName: ubuntu
#      No exact equivalent available in us-west-2
#      - region: us-west-2
#        virtualizationType: pv
#        instanceType: m3.medium
#        sourceAmi:
#        sshUserName: ubuntu
    - baseImage:
        id: trusty
        shortDescription: v14.04
        detailedDescription: Ubuntu Trusty Tahr v14.04
        packageType: deb
      virtualizationSettings:
      - region: us-east-1
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-9eaa1cf6
        sshUserName: ubuntu
      - region: us-west-1
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-12512d72
        sshUserName: ubuntu
      - region: us-west-2
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-3d50120d
        sshUserName: ubuntu
      - region: eu-central-1
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-87564feb
        sshUserName: ubuntu
      - region: eu-west-1
        virtualizationType: hvm
        instanceType: t2.micro
        sourceAmi: ami-f95ef58a
        sshUserName: ubuntu
      - region: us-east-1
        virtualizationType: pv
        instanceType: m3.medium
        sourceAmi: ami-98aa1cf0
        sshUserName: ubuntu
      - region: us-west-1
        virtualizationType: pv
        instanceType: m3.medium
        sourceAmi: ami-59502c39
        sshUserName: ubuntu
      - region: us-west-2
        virtualizationType: pv
        instanceType: m3.medium
        sourceAmi: ami-37501207
        sshUserName: ubuntu

azure:
  enabled: false
  accounts:
    - name: ${providers.azure.primaryCredentials.name}
      clientId: ${providers.azure.primaryCredentials.clientId}
      appKey: ${providers.azure.primaryCredentials.appKey}
      tenantId: ${providers.azure.primaryCredentials.tenantId}
      subscriptionId: ${providers.azure.primaryCredentials.subscriptionId}
      packerResourceGroup: ${providers.azure.primaryCredentials.packerResourceGroup}
      packerStorageAccount: ${providers.azure.primaryCredentials.packerStorageAccount}

docker:
  enabled: true
  bakeryDefaults:
    targetRepository: index.docker.io/mondev
    templateFile: docker.json
    baseImages:
    - baseImage:
        id: precise
        shortDescription: v12.04
        detailedDescription: Ubuntu Precise Pangolin v12.04
        packageType: deb
      virtualizationSettings:
        sourceImage: ubuntu:trusty
    - baseImage:
        id: trusty
        shortDescription: v14.04
        detailedDescription: Ubuntu Trusty Tahr v14.04
        packageType: deb
      virtualizationSettings:
        sourceImage: ubuntu:trusty

defaultCloudProviderType: kubernetes

google:
  enabled: false
  accounts:
    - name: ${providers.google.primaryCredentials.name}
      project: ${providers.google.primaryCredentials.project}
      jsonPath: ${providers.google.primaryCredentials.jsonPath}
  gce:
    bakeryDefaults:
      zone: ${providers.google.defaultZone}

rosco:
  configDir: /opt/rosco/config/packer
  jobs:
    local:
      timeoutMinutes: 20

spectator:
  applicationName: false
  webEndpoint:
    enabled: ${services.spectator.webEndpoint.enabled:false}
    prototypeFilter:
      path: ${services.spectator.webEndpoint.prototypeFilter.path:}

  stackdriver:
    enabled: false
    projectName: ${services.stackdriver.projectName}
    credentialsPath: ${services.stackdriver.credentialsPath}