aws:
  enabled: false
  defaults:
    iamRole: BaseIAMRole
  defaultRegions:
    - name: us-east-1
  defaultFront50Template: http://front50-service:8080
  defaultKeyPairTemplate: keypair
  migration:
    infrastructureApplications: null
  # an empty list means we are directly managing the AWS account we have credentials for (named default.account.env)
  # see prod profile section below for an example configuration to manage other accounts via STS assume role
  accounts: []


azure:
  enabled: false
cf:
  accounts:
  enabled: false
credentials:
  challengeDestructiveActionsEnvironments: default
  primaryAccountTypes: default
default:
  account:
    env: k8s

kubernetes:
  enabled: true
  accounts:
    - name: k8s
      # kubeconfigFile: /root/.kube/config
      # namespaces:        # optional list of namespaces to manage
      # user:              # optional user to authenticate as that must exist in the provided kube config file
      # cluster:           # optional cluster to connect to that must exist in the provided kube config file
      dockerRegistries:
        - accountName: docker
      #     # namespaces:    # optional list of namespaces this docker registry can deploy to

docker:
  enabled: true

dockerRegistry:
  enabled: true
  accounts:
    - name: docker
      address: https://index.docker.io
      username: mondev
      password: dockerhub
      email: cmoon@kenzan.com

      repositories:
        - mondev/ubuntu
      # cacheThreads: # optional (default is 1) number of threads to cache registry contents across
      # clientTimeoutMillis: # optional (default is 1 minute) time before the registry connection times out
      # paginateSize: # optional (default is 100) number of entries to request from /_catalog at a time


google:
  enabled: false

redis:
  enabled: true
  connection: redis://redis-service:6379
  scheduler: default
  parallelism: -1
server:
  port: 7002
services:
  front50:
    baseUrl: http://front50-service:8080
udf:
  enabled: false



