apiVersion: v1
kind: ConfigMap
metadata:
  name: spinconf
data:
  front50.yml: |
{{.Files.Get "static/config/front50.yml" | printf "%s" | indent 4}}
  clouddriver.yml: |
{{.Files.Get "static/config/clouddriver.yml" | printf "%s" | indent 4}}
  orca.yml: |
{{.Files.Get "static/config/orca.yml" | printf "%s" | indent 4}}
  echo.yml: |
{{.Files.Get "static/config/echo.yml" | printf "%s" | indent 4}}
  orca.yml: |
{{.Files.Get "static/config/orca.yml" | printf "%s" | indent 4}}
  gate.yml: |
{{.Files.Get "static/config/gate.yml" | printf "%s" | indent 4}}
  rosco.yml: |
{{.Files.Get "static/config/rosco.yml" | printf "%s" | indent 4}}
  settings.js: |
{{.Files.Get "static/config/settings.js" | printf "%s" | indent 4}}
  nginx.conf: |
{{.Files.Get "static/config/nginx.conf" | printf "%s" | indent 4}}
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379
              protocol: TCP

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cassandra
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: cassandra
    spec:
      containers:
        - name: cassandra
          image: chadmoon/cassandra-spinnaker:latest
          env:
            - name: "CASSANDRA_START_RPC"
              value: "true"
          ports:
            - containerPort: 9160
              protocol: TCP

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: front50
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: front50
    spec:
      volumes:
        - configMap:
            name: "spinconf"
          name: "spinconf"
      containers:
        - name: front50
          image: quay.io/spinnaker/front50:v1.69.0
          volumeMounts:
            - name: "spinconf"
              mountPath: /opt/front50/config
          ports:
            - containerPort: 8080
              protocol: TCP


---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: clouddriver
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: clouddriver
    spec:
      volumes:
        - configMap:
            name: "spinconf"
          name: "spinconf"
      containers:
        - name: clouddriver
          image: quay.io/spinnaker/clouddriver:v1.490.0
          volumeMounts:
            - name: "spinconf"
              mountPath: /opt/clouddriver/config
          ports:
            - containerPort: 7002
              protocol: TCP

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: echo
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: echo
    spec:
      volumes:
        - configMap:
            name: "spinconf"
          name: "spinconf"
      containers:
        - name: echo
          image: quay.io/spinnaker/echo:v1.127.0
          volumeMounts:
            - name: "spinconf"
              mountPath: /opt/echo/config
          ports:
            - containerPort: 8089
              protocol: TCP

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rosco
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: rosco
    spec:
      volumes:
        - configMap:
            name: "spinconf"
          name: "spinconf"
      containers:
        - name: rosco
          image: quay.io/spinnaker/rosco:v0.78.0
          volumeMounts:
            - name: "spinconf"
              mountPath: /opt/rosco/config
          ports:
            - containerPort: 8087
              protocol: TCP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: jenkins
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
        - name: jenkins
          image: chadmoon/jenkins-dind
          ports:
            - containerPort: 8080
              protocol: TCP
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gate
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: gate
    spec:
      volumes:
        - configMap:
            name: "spinconf"
          name: "spinconf"
      containers:
        - name: gate
          image: quay.io/spinnaker/gate:v3.1.0
          volumeMounts:
            - name: "spinconf"
              mountPath: /opt/gate/config
          ports:
            - containerPort: 8084
              protocol: TCP
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: deck
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: deck
    spec:
      volumes:
        - configMap:
            name: "spinconf"
          name: "spinconf"
        - name: git-volume
          gitRepo:
            repository: "https://github.com/moondev/spinnaker-helm.git"
            revision: "d0fb5e847a92011953152c204c11ae8ea2ba3b91"
      containers:
        - name: deck
          image: nginx:latest
          volumeMounts:
            - name: "git-volume"
              mountPath: /opt/webroot
            - name: "spinconf"
              mountPath: /etc/nginx
              subPath: nginx.conf
          ports:
            - containerPort: 80
              protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  type: NodePort
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
  selector:
    app: redis


---

apiVersion: v1
kind: Service
metadata:
  name: cassandra-service
spec:
  type: NodePort
  ports:
  - port: 9160
    targetPort: 9160
    protocol: TCP
  selector:
    app: cassandra

---

apiVersion: v1
kind: Service
metadata:
  name: front50-service
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: front50

---

apiVersion: v1
kind: Service
metadata:
  name: clouddriver-service
spec:
  type: NodePort
  ports:
  - port: 7002
    targetPort: 7002
    protocol: TCP
  selector:
    app: clouddriver

---

apiVersion: v1
kind: Service
metadata:
  name: echo-service
spec:
  type: NodePort
  ports:
  - port: 8089
    targetPort: 8089
    protocol: TCP
  selector:
    app: echo

---

apiVersion: v1
kind: Service
metadata:
  name: gate-service
spec:
  type: NodePort
  ports:
  - port: 8084
    targetPort: 8084
    protocol: TCP
  selector:
    app: gate

---

apiVersion: v1
kind: Service
metadata:
  name: rosco-service
spec:
  type: NodePort
  ports:
  - port: 8087
    targetPort: 8087
    protocol: TCP
  selector:
    app: rosco

---

apiVersion: v1
kind: Service
metadata:
  name: igor-service
spec:
  type: NodePort
  ports:
  - port: 8088
    targetPort: 8088
    protocol: TCP
  selector:
    app: igor

---

apiVersion: v1
kind: Service
metadata:
  name: deck-service
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: deck

---

apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: jenkins